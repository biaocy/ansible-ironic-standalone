---
# As deploy images are managed external service (e.g. nginx), 
# there is no need to setup the ownership
- name: Create deploy file images folder
  file:
    path: "{{ item }}"
    group: "{{ ironic_group }}"
    mode: 0775
    state: directory
  with_items:
    - "{{ ironic_pxe_images_path }}"
    - "{{ ironic_pxe_instance_master_path }}"

# As PXE is managed by external service, there is no
# need to setup the ownership  
- name: Create PXE root folders
  file:
    path: "{{ item }}"
    group: "{{ ironic_group }}"
    mode: 0775
    state: directory
  with_items:
    - "{{ ironic_pxe_tftp_root }}"
    - "{{ ironic_pxe_tftp_master_path }}"
  when: ironic_pxe_tftp_root is defined and ironic_pxe_tftp_root

# As deploy images are managed external service (e.g. nginx), 
# there is no need to setup the ownership
- name: Create HTTP root deploy folder
  file:
    path: "{{ ironic_deploy_http_root }}"
    group: "{{ ironic_group }}"
    mode: 0775
    state: directory
  when: >
    ironic_deploy_http_root is defined and 
    ironic_deploy_http_root and
    ironic_deploy_http_url is defined and
    ironic_deploy_http_url

- name: Copy isolinux config template if defined
  copy:
    src: "{{ ironic_isolinux_config_template }}"
    dest: "{{ ironic_state_path }}/{{ ironic_isolinux_config_template | basename }}"
    owner: "{{ ironic_user }}"
    group: "{{ ironic_group }}"
    mode: 0644
  when: >
    ironic_isolinux_config_template is defined and
    ironic_isolinux_config_template and
    not '$pybasedir' in ironic_isolinux_config_template
  register: __ironic_isolinux_template

- name: Copy grub config template if defined
  copy:
    src: "{{ ironic_grub_config_template }}"
    dest: "{{ ironic_state_path }}/{{ ironic_grub_config_template | basename }}"
    owner: "{{ ironic_user }}"
    group: "{{ ironic_group }}"
    mode: 0644
  when: >
    ironic_grub_config_template is defined and
    ironic_grub_config_template and
    not '$pybasedir' in ironic_grub_config_template
  register: __ironic_grub_template

- name: Copy PXE config template if defined
  copy:
    src: "{{ ironic_pxe_config_template }}"
    dest: "{{ ironic_state_path }}/{{ ironic_pxe_config_template | basename }}"
    owner: "{{ ironic_user }}"
    group: "{{ ironic_group }}"
    mode: 0644
  when: >
    ironic_pxe_config_template is defined and
    ironic_pxe_config_template and
    not '$pybasedir' in ironic_pxe_config_template
  register: __ironic_pxe_template

- name: Copy PXE UEFI config template if defined
  copy:
    src: "{{ ironic_pxe_uefi_pxe_config_template }}"
    dest: "{{ ironic_state_path }}/{{ ironic_pxe_uefi_pxe_config_template | basename }}"
    owner: "{{ ironic_user }}"
    group: "{{ ironic_group }}"
    mode: 0644
  when: >
    ironic_pxe_uefi_pxe_config_template is defined and
    ironic_pxe_uefi_pxe_config_template and
    not '$pybasedir' in ironic_pxe_uefi_pxe_config_template
  register: __ironic_pxe_uefi_template

- name: Copy iPXE config template if defined
  copy:
    src: "{{ ironic_pxe_ipxe_boot_script }}"
    dest: "{{ ironic_state_path }}/{{ ironic_pxe_ipxe_boot_script | basename }}"
    owner: "{{ ironic_user }}"
    group: "{{ ironic_group }}"
    mode: 0644
  when: >
    ironic_pxe_ipxe_boot_script is defined and
    ironic_pxe_ipxe_boot_script and
    not '$pybasedir' in ironic_pxe_ipxe_boot_script
  register: __ironic_ipxe_template

# Get pxelinux from syslinux
# http://www.syslinux.org/wiki/index.php?title=Library_modules#All_Syslinux_variants_need_an_additional_ldlinux_module
- block:
  - name: Check if pxelinux exits
    stat:
      get_checksum: yes
      checksum_algorithm: md5
      path: "{{ ironic_pxe_tftp_root }}/pxelinux.0"
    register: __syslinux_tftp_pxelinux

  - name: Check if pxelinux has changed
    stat:
      get_checksum: yes
      checksum_algorithm: md5
      path: "{{ ironic_syslinux_basedir }}/syslinux-{{ ironic_pxe_syslinux_version }}/bios/core/pxelinux.0"
    register: __syslinux_basedir_pxelinux

  - name: Copy syslinux binaries to PXE folder
    shell: cp -v "{{ item }}" "{{ ironic_pxe_tftp_root }}" && chgrp "{{ ironic_group }}" "{{ ironic_pxe_tftp_root }}/{{ item | basename }}" && chmod 0664  "{{ ironic_pxe_tftp_root }}/{{ item | basename }}"
    with_items:
    - bios/core/pxelinux.0
    - bios/memdisk/memdisk
    - bios/com32/elflink/ldlinux/ldlinux.c32
    - bios/com32/libutil/libutil.c32
    - bios/com32/lib/libcom32.c32
    - bios/com32/chain/chain.c32
    when: >
        not __syslinux_tftp_pxelinux.stat.exists
        or __syslinux_tftp_pxelinux.stat.checksum != __syslinux_basedir_pxelinux.stat.checksum
    args:
      chdir: "{{ ironic_syslinux_basedir }}/syslinux-{{ ironic_pxe_syslinux_version }}"
    tags: ["pxelinux"]

  when: >
    ironic_pxe_tftp_root is defined and
    ironic_pxe_tftp_root and
    ironic_syslinux_basedir is defined and
    ironic_syslinux_basedir and
    ironic_pxe_bootfile_name == 'pxelinux.0'


- block:
  - name: Setup PXE UEFI with elilo
    include: setup_pxe_elilo.yml
    when: ironic_pxe_uefi_pxe_bootfile_name == "elilo.efi"
    tags: ["elilo", "uefi"]

  - name: Setup PXE UEFI with grub2
    include: setup_pxe_grub2.yml
    when: ironic_pxe_uefi_pxe_bootfile_name == "grubx64.efi"
    tags: ["grub2", "uefi"]

  - name: Setup iPXE
    include: setup_pxe_ipxe.yml
    when: ironic_pxe_uefi_pxe_bootfile_name == "ipxe.efi"
    tags: ["ipxe", "uefi"]

  when: >
    ironic_pxe_tftp_root is defined and
    ironic_pxe_tftp_root and
    ironic_pxe_uefi_pxe_bootfile_name is defined


- name: Reload Ironic Conductor daemon
  service:
    name: "{{ ironic_conductor_service_name }}"
    state: reloaded
  when: >
    __ironic_isolinux_template | changed or
    __ironic_grub_template | changed or
    __ironic_pxe_template | changed or
    __ironic_pxe_uefi_template | changed or
    __ironic_ipxe_template | changed

