---
# Check the length of the MAC, iBMC ip ...
- name: Validate MAC address(es)
  fail:
    msg: "MAC address incorrect!"
  when: item | length != 17
  with_items: "{{ baremetal_macs }}"

# Check the length of the MAC, iBMC ip ...
- name: Validate iBMC settings
  fail:
    msg: "IBMC settings incorrect!"
  when: >
    baremetal_ibmc_addr is not defined or not baremetal_ibmc_addr
    or baremetal_ibmc_user is not defined or not baremetal_ibmc_user
    or baremetal_ibmc_pass is not defined or not baremetal_ibmc_pass
    or baremetal_ibmc_sys is not defined or not baremetal_ibmc_sys

# Define the name based on the fqdn
- name: Define the server domain
  set_fact:
    baremetal_domain: "{{ baremetal_fqdn.split('.', 1) | last }}"
  when: not (baremetal_domain is defined and baremetal_domain) and baremetal_fqdn
  
- name: Define the server name
  set_fact:
    baremetal_name: "{{ baremetal_fqdn.split('.') | first }}"
  when: not (baremetal_name is defined and baremetal_name) and baremetal_fqdn

- name: Define the server name as MAC
  set_fact:
    baremetal_name: "{{ baremetal_macs | first | regex_replace(':', '-') }}"
  when: baremetal_macs and not (baremetal_name is defined and baremetal_name)

# - name: Define the IPMI web console port for shellinabox
#   set_fact:
#     baremetal_console_port: "{{ baremetal_ibmc_ip.split('.')[-1]|int + 10000 }}"
#   when: baremetal_ibmc_ip and not (baremetal_console_port is defined and baremetal_console_port)


# Ironic checks
- block:
  - name: Check if the node is defined in Ironic
    shell: >
      openstack baremetal node show
      --os-token="{{ Ironic_api_token }}"
      --os-url="{{ Ironic_api_public_url }}"
      -f value -c uuid "{{ baremetal_name }}"
    register: __baremetal_new
    delegate_to: "{{ groups.client[0] }}"
    become: no
    ignore_errors: yes

  - name: Define the new baremetal node in Ironic
    shell: >
      openstack baremetal node create
      --os-token="{{ Ironic_api_token }}"
      --os-url="{{ Ironic_api_public_url }}"
      --name "{{ baremetal_name }}" --driver "{{ baremetal_driver }}"
      --power-interface "{{ baremetal_driver_power_interface }}"
      --management-interface "{{ baremetal_driver_management_interface }}"
      --boot-interface "{{ baremetal_driver_boot_interface }}"
      --deploy-interface "{{ baremetal_driver_deploy_interface }}"
      --driver-info ibmc_address="{{ baremetal_ibmc_addr }}"
      --driver-info ibmc_username="{{ baremetal_ibmc_user }}"
      --driver-info ibmc_password="{{ baremetal_ibmc_pass }}"
      --driver-info ibmc_system_id="{{ baremetal_ibmc_sys }}"
      --driver-info ibmc_verify_ca="{{ baremetal_ibmc_verify_ca }}"
      --driver-info deploy_kernel="{{ baremetal_deploy_kernel }}"
      --driver-info deploy_ramdisk="{{ baremetal_deploy_ramdisk }}"
      -f value -c uuid
    register: __baremetal_defined
    delegate_to: "{{ groups.client[0] }}"
    when: __baremetal_new.stdout | trim == ''
    become: no
    run_once: yes

  - name: Get Ironic UUID
    set_fact:
      baremetal_uuid: "{{ (__baremetal_new.stdout | trim == '') | ternary(__baremetal_defined.stdout, __baremetal_new.stdout) | trim }}"

  - name: Define the MAC address ports in Ironic
    command: > 
      openstack baremetal port create
      --os-token="{{ Ironic_api_token }}"
      --os-url="{{ Ironic_api_public_url }}"
      --node "{{ baremetal_uuid }}" "{{ item }}"
    with_items: "{{ baremetal_macs }}"
    when: baremetal_macs and __baremetal_new.stdout | trim == ''
    delegate_to: "{{ groups.client[0] }}"
    become: no
    run_once: yes

  when: _baremetal_create is defined and _baremetal_create

